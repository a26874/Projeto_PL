
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/aleatorio and comentarioMult comentarioOne entrada escrever false fazer fim fold funcao id map numF numInt or se texto true S : LstI  LstI : LstI Inst \';\'\n                 | LstI InstC LstI : Inst \';\'\n                 | InstC InstC : comentarioOne\n                  | comentarioMult Inst : V  Inst : se Comp fazer \':\' S fim V : id \'=\' E  V : id \'=\' texto  V : id \'=\' Lista  V : id \'=\' true  V : id \'=\' false  Lista : \'[\' ListIn \']\'  Lista : \'[\' \']\'  ListIn : numInt \',\' ListIn ListIn : numInt Texto :  texto   Texto :  E   Texto : Texto "<" ">" Texto   V : escrever "(" Texto ")"   V : id \'=\' entrada \'(\' \')\'   E : E \'+\' T  E : E \'-\' T  E : T  T : T \'/\' F  T : T \'*\' F  T : F   F : \'(\' E \')\'   F : numInt    F : numF    F : id    F : id "[" numInt "]"  F : aleatorio "(" numInt ")"  Comp : CompF \'!\' \'=\' CompF  Comp : Comp and Comp  Comp : Comp  or Comp  Comp : CompF \'=\' \'=\' CompF  Comp : CompF \'>\' CompF  Comp : CompF \'>\' \'=\' CompF  Comp : CompF \'<\' CompF  Comp : CompF \'<\' \'=\' CompF  Comp : \'(\' Comp \')\'  CompF : true CompF : false  CompF : E '
    
_lr_action_items = {'se':([0,2,4,7,8,12,13,28,55,],[6,6,-5,-6,-7,-3,-4,-2,6,]),'comentarioOne':([0,2,4,7,8,12,13,28,55,],[7,7,-5,-6,-7,-3,-4,-2,7,]),'comentarioMult':([0,2,4,7,8,12,13,28,55,],[8,8,-5,-6,-7,-3,-4,-2,8,]),'id':([0,2,4,6,7,8,12,13,16,26,27,28,30,31,34,35,38,39,40,41,50,55,58,59,61,63,89,],[9,9,-5,24,-6,-7,-3,-4,24,24,24,-2,24,24,24,24,24,24,24,24,24,9,24,24,24,24,24,]),'escrever':([0,2,4,7,8,12,13,28,55,],[10,10,-5,-6,-7,-3,-4,-2,10,]),'$end':([1,2,4,7,8,12,13,28,],[0,-1,-5,-6,-7,-3,-4,-2,]),'fim':([2,4,7,8,12,13,28,79,],[-1,-5,-6,-7,-3,-4,-2,90,]),';':([3,5,11,20,21,22,23,24,44,45,46,47,48,65,66,67,68,69,75,77,84,85,86,87,90,],[13,-8,28,-26,-29,-31,-32,-33,-10,-11,-12,-13,-14,-30,-24,-25,-27,-28,-16,-22,-34,-35,-23,-15,-9,]),'(':([6,10,16,25,26,27,30,31,34,35,38,39,40,41,49,50,58,59,61,63,89,],[16,27,16,43,50,50,16,16,50,50,50,50,50,50,72,50,50,50,50,50,50,]),'true':([6,16,26,30,31,34,35,58,59,61,63,],[17,17,47,17,17,17,17,17,17,17,17,]),'false':([6,16,26,30,31,34,35,58,59,61,63,],[18,18,48,18,18,18,18,18,18,18,18,]),'numInt':([6,16,26,27,30,31,34,35,38,39,40,41,42,43,50,51,58,59,61,63,88,89,],[22,22,22,22,22,22,22,22,22,22,22,22,70,71,22,76,22,22,22,22,76,22,]),'numF':([6,16,26,27,30,31,34,35,38,39,40,41,50,58,59,61,63,89,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'aleatorio':([6,16,26,27,30,31,34,35,38,39,40,41,50,58,59,61,63,89,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'=':([9,15,17,18,19,20,21,22,23,24,32,33,34,35,37,65,66,67,68,69,84,85,],[26,33,-45,-46,-47,-26,-29,-31,-32,-33,58,59,61,63,-47,-30,-24,-25,-27,-28,-34,-35,]),'fazer':([14,17,18,19,20,21,22,23,24,56,57,60,62,64,65,66,67,68,69,80,81,82,83,84,85,],[29,-45,-46,-47,-26,-29,-31,-32,-33,-37,-38,-40,-42,-44,-30,-24,-25,-27,-28,-36,-39,-41,-43,-34,-35,]),'and':([14,17,18,19,20,21,22,23,24,36,56,57,60,62,64,65,66,67,68,69,80,81,82,83,84,85,],[30,-45,-46,-47,-26,-29,-31,-32,-33,30,30,30,-40,-42,-44,-30,-24,-25,-27,-28,-36,-39,-41,-43,-34,-35,]),'or':([14,17,18,19,20,21,22,23,24,36,56,57,60,62,64,65,66,67,68,69,80,81,82,83,84,85,],[31,-45,-46,-47,-26,-29,-31,-32,-33,31,31,31,-40,-42,-44,-30,-24,-25,-27,-28,-36,-39,-41,-43,-34,-35,]),'!':([15,17,18,19,20,21,22,23,24,37,65,66,67,68,69,84,85,],[32,-45,-46,-47,-26,-29,-31,-32,-33,-47,-30,-24,-25,-27,-28,-34,-35,]),'>':([15,17,18,19,20,21,22,23,24,37,65,66,67,68,69,78,84,85,],[34,-45,-46,-47,-26,-29,-31,-32,-33,-47,-30,-24,-25,-27,-28,89,-34,-35,]),'<':([15,17,18,19,20,21,22,23,24,37,52,53,54,65,66,67,68,69,84,85,92,],[35,-45,-46,-47,-26,-29,-31,-32,-33,-47,78,-19,-20,-30,-24,-25,-27,-28,-34,-35,78,]),')':([17,18,19,20,21,22,23,24,36,37,52,53,54,56,57,60,62,64,65,66,67,68,69,71,72,73,80,81,82,83,84,85,92,],[-45,-46,-47,-26,-29,-31,-32,-33,64,65,77,-19,-20,-37,-38,-40,-42,-44,-30,-24,-25,-27,-28,85,86,65,-36,-39,-41,-43,-34,-35,-21,]),'+':([19,20,21,22,23,24,37,44,54,65,66,67,68,69,73,84,85,],[38,-26,-29,-31,-32,-33,38,38,38,-30,-24,-25,-27,-28,38,-34,-35,]),'-':([19,20,21,22,23,24,37,44,54,65,66,67,68,69,73,84,85,],[39,-26,-29,-31,-32,-33,39,39,39,-30,-24,-25,-27,-28,39,-34,-35,]),'/':([20,21,22,23,24,65,66,67,68,69,84,85,],[40,-29,-31,-32,-33,-30,40,40,-27,-28,-34,-35,]),'*':([20,21,22,23,24,65,66,67,68,69,84,85,],[41,-29,-31,-32,-33,-30,41,41,-27,-28,-34,-35,]),'[':([24,26,],[42,51,]),'texto':([26,27,89,],[45,53,53,]),'entrada':([26,],[49,]),':':([29,],[55,]),']':([51,70,74,76,91,],[75,84,87,-18,-17,]),',':([76,],[88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,55,],[1,79,]),'LstI':([0,55,],[2,2,]),'Inst':([0,2,55,],[3,11,3,]),'InstC':([0,2,55,],[4,12,4,]),'V':([0,2,55,],[5,5,5,]),'Comp':([6,16,30,31,],[14,36,56,57,]),'CompF':([6,16,30,31,34,35,58,59,61,63,],[15,15,15,15,60,62,80,81,82,83,]),'E':([6,16,26,27,30,31,34,35,50,58,59,61,63,89,],[19,37,44,54,19,19,19,19,73,19,19,19,19,54,]),'T':([6,16,26,27,30,31,34,35,38,39,50,58,59,61,63,89,],[20,20,20,20,20,20,20,20,66,67,20,20,20,20,20,20,]),'F':([6,16,26,27,30,31,34,35,38,39,40,41,50,58,59,61,63,89,],[21,21,21,21,21,21,21,21,21,21,68,69,21,21,21,21,21,21,]),'Lista':([26,],[46,]),'Texto':([27,89,],[52,92,]),'ListIn':([51,88,],[74,91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> LstI','S',1,'p_s','grammar.py',30),
  ('LstI -> LstI Inst ;','LstI',3,'p_lstI_tail','grammar.py',34),
  ('LstI -> LstI InstC','LstI',2,'p_lstI_tail','grammar.py',35),
  ('LstI -> Inst ;','LstI',2,'p_lstI_head','grammar.py',41),
  ('LstI -> InstC','LstI',1,'p_lstI_head','grammar.py',42),
  ('InstC -> comentarioOne','InstC',1,'p_comment','grammar.py',46),
  ('InstC -> comentarioMult','InstC',1,'p_comment','grammar.py',47),
  ('Inst -> V','Inst',1,'p_Inst','grammar.py',51),
  ('Inst -> se Comp fazer : S fim','Inst',6,'p_inst_se','grammar.py',55),
  ('V -> id = E','V',3,'p_atribArith','grammar.py',84),
  ('V -> id = texto','V',3,'p_atribTexto','grammar.py',89),
  ('V -> id = Lista','V',3,'p_atribList','grammar.py',94),
  ('V -> id = true','V',3,'p_atribBoolT','grammar.py',99),
  ('V -> id = false','V',3,'p_atribBoolF','grammar.py',104),
  ('Lista -> [ ListIn ]','Lista',3,'p_lista','grammar.py',110),
  ('Lista -> [ ]','Lista',2,'p_listaVazia','grammar.py',114),
  ('ListIn -> numInt , ListIn','ListIn',3,'p_list1','grammar.py',118),
  ('ListIn -> numInt','ListIn',1,'p_list2','grammar.py',128),
  ('Texto -> texto','Texto',1,'p_text_0','grammar.py',134),
  ('Texto -> E','Texto',1,'p_text_1','grammar.py',138),
  ('Texto -> Texto < > Texto','Texto',4,'p_text_concat','grammar.py',142),
  ('V -> escrever ( Texto )','V',4,'p_esc','grammar.py',155),
  ('V -> id = entrada ( )','V',5,'p_ent','grammar.py',164),
  ('E -> E + T','E',3,'p_expr_soma','grammar.py',171),
  ('E -> E - T','E',3,'p_expr_sub','grammar.py',176),
  ('E -> T','E',1,'p_expr1','grammar.py',181),
  ('T -> T / F','T',3,'p_expr_div','grammar.py',185),
  ('T -> T * F','T',3,'p_expr_mult','grammar.py',190),
  ('T -> F','T',1,'p_expr2','grammar.py',195),
  ('F -> ( E )','F',3,'p_expr3','grammar.py',199),
  ('F -> numInt','F',1,'p_expr4','grammar.py',205),
  ('F -> numF','F',1,'p_expr5','grammar.py',209),
  ('F -> id','F',1,'p_expr6','grammar.py',213),
  ('F -> id [ numInt ]','F',4,'p_expr7','grammar.py',217),
  ('F -> aleatorio ( numInt )','F',4,'p_rand','grammar.py',221),
  ('Comp -> CompF ! = CompF','Comp',4,'p_comp_diff','grammar.py',227),
  ('Comp -> Comp and Comp','Comp',3,'p_comp_and','grammar.py',231),
  ('Comp -> Comp or Comp','Comp',3,'p_comp_or','grammar.py',235),
  ('Comp -> CompF = = CompF','Comp',4,'p_comp_equality','grammar.py',239),
  ('Comp -> CompF > CompF','Comp',3,'p_comp_higher','grammar.py',243),
  ('Comp -> CompF > = CompF','Comp',4,'p_comp_highereq','grammar.py',247),
  ('Comp -> CompF < CompF','Comp',3,'p_comp_lower','grammar.py',251),
  ('Comp -> CompF < = CompF','Comp',4,'p_comp_lowereq','grammar.py',255),
  ('Comp -> ( Comp )','Comp',3,'p_comp_factor','grammar.py',259),
  ('CompF -> true','CompF',1,'p_comp_valor1','grammar.py',263),
  ('CompF -> false','CompF',1,'p_comp_valor2','grammar.py',267),
  ('CompF -> E','CompF',1,'p_comp_valor3','grammar.py',271),
]
